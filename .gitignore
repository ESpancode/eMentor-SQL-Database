/*Creating tables for e-Mentor database*/
/*e-Mentor application will be programmed to store data from users*/
/*The whole program has been developed in SQL and has been used in the project*/
/*Some areas of the project used a database to store data on users of the application*/

/*User table is specified for users accessing the application*/
/*Each field has been highlighted with '' to indicate what each user will access*/
/*Each field on the database should be assigned and limted with a value*/


DROP TABLE IF EXISTS `mydb`.`User` ;                          
CREATE TABLE IF NOT EXISTS `mydb`.`User`(      /*Creating table for User*/
`id_User` INT NOT NULL, 
`First_Name` CHAR(25) NULL, 
`Last_Name` CHAR(25) NULL, 
`Title` CHAR(4) NULL, 
`Email_Address` VARCHAR(45) NULL, 
`Password` VARCHAR(45) NULL, 
`Position` CHAR(20) NULL, 
`User_Name` VARCHAR(45) NULL, 
PRIMARY KEY (`id_User`),                    /*Primary key in field has been selected*/
UNIQUE INDEX `Position_UNIQUE`              /*Unique field in the table is selected*/

DROP TABLE IF EXISTS `mydb`.`Registeration` ; 
CREATE TABLE IF NOT EXISTS `mydb`.`Registeration`( 
`id_Registeration` INT NULL, 
`First_Name` CHAR(45) NULL, 
`Last_Name` CHAR(45) NULL, 
`Email_Address` VARCHAR(45) NULL, 
`Password` VARCHAR(45) NULL, 
`id_User` INT NOT NULL, 
PRIMARY KEY (`id_Registeration`),                               /*Primary key in field has been selected*/
CONSTRAINT `fk_Registeration_User`                             /*Constraints will occur based on the field and table relations*/
FOREIGN KEY (`id_User`)                                       /*Foreign key in field has been selected, based on the table*/

DROP TABLE IF EXISTS `mydb`.`Login` ; 
CREATE TABLE IF NOT EXISTS `mydb`.`Login` ( 
`id_Login` INT NOT NULL, 
`User_Name` VARCHAR(45) NULL, 
`Password` VARCHAR(45) NULL, 
`Bad_Login` INT NULL, 
`id_Registeration` INT NOT NULL, 
PRIMARY KEY (`id_Login`), 
CONSTRAINT `fk_Login_Registeration1` 
FOREIGN KEY (`id_Registeration`) REFERENCES `mydb`.`Registeration` (`id_Registeration`) 

DROP TABLE IF EXISTS `mydb`.`Payment_System` ; 
CREATE TABLE IF NOT EXISTS `mydb`.`Payment_System` ( 
`id_Payment_System` INT NOT NULL, 
`Account_Number` INT(16) NULL, 
`Card_Expiration` DATE NULL, 
`Valid_Payment` BINARY NULL, 
`Security_Code` INT(3) NULL, 
`id_User` INT NOT NULL, 
PRIMARY KEY (`id_Payment_System`), 
CONSTRAINT `fk_Payment_System_User1` 
FOREIGN KEY (`id_User`) REFERENCES `mydb`.`User` (`id_User`) 

DROP TABLE IF EXISTS `mydb`.`Connection_Space` ; 
CREATE TABLE IF NOT EXISTS `mydb`.`Connection_Space` ( 
`id_Connection_Space` INT NOT NULL, 
`Server_Name` VARCHAR(45) NULL, 
`Domain_Name` VARCHAR(45) NULL, 
`Host_Type` CHAR(15) NULL, 
`Connection_Status` CHAR(10) NULL, 
`id_Payment_System` INT NOT NULL, 
PRIMARY KEY (`id_Connection_Space`), 
CONSTRAINT `fk_Connection_Space_Payment_System1` 
FOREIGN KEY (`id_Payment_System`) REFERENCES `mydb`.`Payment_System` (`id_Payment_System`) 

DROP TABLE IF EXISTS `mydb`.`Social_Page` ; 
CREATE TABLE IF NOT EXISTS `mydb`.`Social_Page` ( 
`id_Social_Page` INT NOT NULL, 
`Social_Network` VARCHAR(45) NULL, 
`User_Details` VARCHAR(45) NULL, 
`Communication_Form` VARCHAR(45) NULL, 
`SN_Details` CHAR(45) NULL, 
`SN_Account` VARCHAR(45) NULL, 
`id_Connection_Space` INT NOT NULL, 
PRIMARY KEY (`id_Social_Page`), 
CONSTRAINT `fk_Social_Page_Connection_Space1` 
FOREIGN KEY (`id_Connection_Space`) REFERENCES `mydb`.`Connection_Space` (`id_Connection_Space`) 

DROP TABLE IF EXISTS `mydb`.`Mindmap` ; 
CREATE TABLE IF NOT EXISTS `mydb`.`Mindmap` ( 
`id_Mindmap` INT NOT NULL, 
`Subject_Name` CHAR(15) NULL, 
`Further_Reading` VARCHAR(45) NULL, 
`Questions` CHAR(50) NULL, 
`Answers` VARCHAR(45) NULL, 
`id_Login` INT NOT NULL, 
PRIMARY KEY (`id_Mindmap`), 
CONSTRAINT `fk_Mindmap_Login1` 
FOREIGN KEY (`id_Login`) REFERENCES `mydb`.`Login` (`id_Login`) 

DROP TABLE IF EXISTS `mydb`.`Corrections` ; 
CREATE TABLE IF NOT EXISTS `mydb`.`Corrections` ( 
`id_Corrections` INT NULL, 
`Title` CHAR(45) NULL, 
`Question_Number` INT NULL, 
`Answer_Letter` CHAR(1) NULL, 
`Full_Answer` VARCHAR(45) NULL, 
`Further_Reading` VARCHAR(45) NULL, 
`id_Mindmap` INT NOT NULL, PRIMARY KEY (`id_Corrections`), 
CONSTRAINT `fk_Corrections_Mindmap1` 
FOREIGN KEY (`id_Mindmap`) REFERENCES `mydb`.`Mindmap` (`id_Mindmap`) 
